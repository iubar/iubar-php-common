version: 2.1
jobs:
  build:
    docker:
      - image: cimg/php:8.1-browsers
      # https://circleci.com/docs/language-php
      # https://github.com/CircleCI-Public/cimg-php
      # https://hub.docker.com/r/cimg/php
      # https://circleci.com/developer/images/image/cimg/php          
    steps:    
      - run: php -v
      - checkout
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            # Find a cache corresponding to this specific composer.lock checksum
            # when this file is changed, this key will fail          
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/caching/)
            # (match the most recently generated cache used from any branch)
            #- composer-v1-
      - run: 
          name: Install
          command: composer install --no-progress --no-interaction --prefer-dist
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor   
      - run: 
          name: Lint
          command: |
            vendor/bin/parallel-lint --exclude vendor .
            vendor/bin/phpstan -V
            vendor/bin/phpstan analyse --no-interaction --no-progress
            vendor/bin/var-dump-check --exclude vendor . || true            
      - run: 
          name: Test
          command: |
            ls -la
            vendor/bin/phpunit
# 
# 
# Visual Editor: https://circleci-public.github.io/visual-config-editor/
# References: 
#   https://circleci.com/continuous-integration/
#   https://circleci.com/docs/configuration-reference 
#   https://app.circleci.com/settings/user/notifications
#   https://circleci.com/docs/variables
# Immagini:
#   https://circleci.com/docs/circleci-images
#   https://github.com/circleci/circleci-images
#   https://circleci.com/developer/images
#   https://hub.docker.com/u/cimg
#   https://circleci.com/blog/announcing-our-next-generation-convenience-images-smaller-faster-more-deterministic/
# Integrazioni:
#   https://circleci.com/docs/webhooks
#   https://circleci.com/blog/circleci-slack-integration/
#   https://circleci.com/blog/continuous-integration-slack-twilio/
# Orb Registry: https://circleci.com/developer/orbs
# Orbs:
#   https://github.com/woltsu/telegram-orb
#   https://circleci.com/developer/orbs/orb/woltsu/telegram
#   https://circleci.com/developer/orbs/orb/circleci/slack
#   https://github.com/CircleCI-Public/slack-orb/wiki
# Examples
#   https://github.com/CircleCI-Public/circleci-demo-react-native/blob/master/.circleci/config.yml
#   https://github.com/orgs/CircleCI-Public/repositories?type=all
#
# Languages
#   Java
#     https://circleci.com/docs/language-java-maven
#     https://circleci.com/docs/language-java
#   Android
#     https://circleci.com/docs/language-android
#   JS
#     https://circleci.com/docs/language-javascript
# DB
#   https://circleci.com/docs/postgres-config#example-mysql-project
